% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_stats_db.R
\name{plot_docker_stats_single}
\alias{plot_docker_stats_single}
\title{Plot Single Resource Utilization Graph}
\usage{
plot_docker_stats_single(df_docker, df_timings, bench_params, stage_names)
}
\arguments{
\item{df_docker}{the dataframe containing only atomic docker stats values}

\item{df_timings}{the dataframe containingevent markers from ST_Benchi}

\item{bench_params}{a character vector of at most 2 stats that shall be plotted}

\item{stage_names}{a character vector of stages to be plotted}
}
\value{
a ggplot2 plot of the two selected resource utilization metrics
}
\description{
This function is designed to plot different resource utilization metrics using
ggplot2. It uses a dataframe containing resource utilization metrics parsed by the
}
\examples{
# for the df_timings and the df_docker utilization, create the resource utilization
# graph for CPU and Memory usage
create_stage_graph(df_docker, df_timings, c("CPUPerc", "MemUsage"), c("ingestion"))
}
\seealso{
[parse_docker_stats()] function, and timing information directly from the database.

It then plots at most two different metrics in the same graph, and will give two
different axis scales for the y axis. It will also color-code the two displayed metrics.
The code for this part is adapted from https://finchstudio.io/blog/ggplot-dual-y-axes/

Additionally, the function will display every event supplied by the `df_timings` dataframe
and display them as horizontal markers, distinguished by different line styles.

Together, these two graph types give an in-depth look into how the resource utilization of
systems-under-test changes depending on the stage of execution they are in.
}
